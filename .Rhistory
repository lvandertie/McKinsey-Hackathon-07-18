#----Plug Premium into optimization equation to get ideal Incentive
Premium <- 3300
incentive <- -400 * ln( ln(200/2.706706 * (1/Premium))/3  )
incentive <- -400 * log( log(200/2.706706 * (1/Premium))/3  )
log(200/2.706706 * (1/Premium))/3
#----Plug Premium into optimization equation to get ideal Incentive
Premium <- 33000
incentive <- -400 * log( log(200/2.706706 * (1/Premium))/3  )
#----Plug Premium into optimization equation to get ideal Incentive
Premium <- 3
incentive <- -400 * log( log(200/2.706706 * (1/Premium))/3  )
#----Plug Premium into optimization equation to get ideal Incentive
Premium <- 30
incentive <- -400 * log( log(200/2.706706 * (1/Premium))/3  )
plot(x, log(200/2.706706 * (1/x))/3)
plot(x, log(200/2.706706 * (1/x))/3)
curve(log(200/2.706706 * (1/x))/3, from = 0, to = 20000)
curve(log(200/2.706706 * (1/x))/3, from = 0, to = 10000)
Hours <- 10*(1 - exp(-Incentive/400))
Hours <- 5
delta_p <- 20(1 - exp(-Hours/5))
delta_p <- 20(1 - exp(- Hours/5))
delta_p <- 20*(1 - exp(- Hours/5))
Hours <- 1
delta_p <- 20*(1 - exp(- Hours/5))
curve(delta_p)
curve(20*(1 - exp(- Hours/5), from - 0, to = 15)
curve(20*(1 - exp(- Hours/5), from - 0, to = 15))
curve(20*(1 - exp(- Hours/5)), from - 0, to = 15)
curve(20*(1 - exp(- x/5)), from - 0, to = 15)
curve(20*(1 - exp(- x/5)), from = 0, to = 15)
incentive <- -400 * log( log(200/2.706706 * (100/Premium))/3  )
curve(log(200/2.706706 * (100/x))/3, from = 0, to = 10000)
curve(log(log(200/2.706706 * (100/x))/3), from = 0, to = 10000)
#----Plug Premium into optimization equation to get ideal Incentive
Premium <- 3000
incentive <- -400 * log( log(200/2.706706 * (100/Premium))/3  )
curve(log(log(200/2.706706 * (100/x))/3), from = 0, to = 10000, xlab = Premium, ylab = Incentive)
curve(log(log(200/2.706706 * (100/x))/3), from = 0, to = 10000, xlab = "Premium", ylab = "Incentive")
#----Logistic Regression to create benchmark probability model----
setwd("C:/Users/lvandertie001/Documents/GitHub/McKinsey-Hackathon-07-18"")
#----Logistic Regression to create benchmark probability model----
setwd("C:/Users/lvandertie001/Documents/GitHub/McKinsey-Hackathon-07-18")
#----Logistic Regression to create benchmark probability model----
setwd("C:/Users/lvandertie001/Documents/GitHub/McKinsey-Hackathon-07-18")
train.data <- read.csv(file = "train_ZoGVYWq.csv")
View(train.data)
